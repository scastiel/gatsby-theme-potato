_id: 93198190-cd20-11e8-a0fc-c148ba360d11
slug: /posts/2018-10-03-utile-d-apprendre-react/
name: Morgan
email: 14d85d875b47671f69d39b83399c5bfb
url: 'http://morgan-durand.com/'
message: >-
  Bonjour,

  j'ai un point de vue tout à fait différent.

  Pour moi les languages au typage dynamique tels que javascript ne sont tous
  simplement pas adapté au monde des webapps.


  Comme tu l'as si bien souligné, le front-end a beaucoup évoulué, on est très
  loin d'un seul développeur travaillant dans sont coin sur le front.

  Maintenant, il n'est pas rare d'avoir des équipes d'une dizaine de personne
  travaillant ensemble sur le même front.


  Forcément les usages évoluent, il faut s'outillé : outils de build, suivit des
  convention de developpement, les test, les log, le debug, les point d'arret,
  etc ...

  Enfaîte on ramène toutes les bonnes pratiques du backend sur le front.


  Maintenant le problème est le language en lui même, si on veux qu'une
  application dure une dizaine d'année, il n'y a pas de secret, il faut  enrobé
  la webapp de teste fonctionelle et ... il faudra surtout REFACTORER.


  Comme on peut oublié le ctrl + clique pour acceder à une fonction en
  javascript, alors refactorer automatiquement une fonction ... outch !!!!


  C'est la qu'interviens angular, et sont typescript. ça apporte un peut plus de
  stabilité ... mais c'est pas encore ça.
date: '2018-10-11T06:40:42.747Z'
